Steg 5- frågor.txt
Mål- Jag siktar på VG.

1. När använder man add respektive commit?
2. Vad är pull repektive push?
3. När använder man log respektive status?
4. Hur kan man formulera sig i sina commit-meddelanden?
5. Det finns flera sätt att rulla tillbaka koden till ett tidigare tillstånd. 
Förklara skillnaden och motivera när man skulle använda den ena eller andra metoden. 
Ge gärna exempel på de kommandon du använder för att göra detta och vissa att det fungerar, 
vilken output du fick från git-kommandona.
Tips: Gör exemplen med att backa i en branch så att master fortfarande är korrekt. 

1. Add använder man först för att lägga till filer eller allt som inte ignoreras (med .) så man vet vad som ska commitas.
Efter "git add" så kan man göra "commit -m "<meddelande>"" för att lägga till ändringar lokalt.

2. Git pull använder man när man börjar jobba för att få de senaste filerna från repo.
Git push använder man efter commit för att lägga in sina senaste ändringar så andra får tillgång till dem via repon.

3. Log används för att se alla sina ändringar och status används för att se vad man behöver göra härnäst.

4. Commit-meddelande ska beskriva varför man gör vissa saker helst eller vilka ändringar om man följer direktiv.

5. Man gå tillbaka till tidigare tillstånd genom "git checkout", "git revert" eller "git reset".
"git checkout" använder man nästan jämnt så man kan se vad man gjorde fel tidigare.
Om man istället vill ta bort felet med ny commit så kan man istället använda "git revert" eller "git reset"
"git revert" behåller felet synligt i "git log" medans "git reset" tar bort felet så att det inte syns. 

Exempel: När jag var i "3a0a40c" behövde jag gå tillbaka till den första branchen "236ab28" 
för att kolla hur Nahids ursprungliga mall såg ut så jag inte hade gjort några stora ändringar.
Planen var att gå tillbaka och kopiera texten i Notepad så jag kan jämföra.
För att se namnet dit jag ska gå tillbaka till skrev jag "git log --oneline" och fick följande utskrift:

	c1fab44 (HEAD, utvecklingsverktyg/master, master) Added frågor.txt and answer G-questions
	3a0a40c put javadoc in ignore-file, added start method just calling other
	4af4880 Deleted Javadoc-files and generated new ones.
	dadf1ab adding main class, added toString-method in constructor
	d63f3a6 Assignment 1. Wrote constructor and Javadoc.
	2f3b282 Lade till en todo-lista externt och uppdaterade .gitignore
	236ab28 Har skapat dir guessingGame, laddat ner Nahids mall Guesser.java och 
	skapat en .gitignore start för inlämningsuppgift senast 21 Oktober 2020

Jag skrev då "git checkout 236ab28git" för att komma tillbaka till Nahids mall Guesser.java
Dessa output fick jag då: 
	
	Note: switching to '236ab28'.

	You are in 'detached HEAD' state. You can look around, make experimental
	changes and commit them, and you can discard any commits you make in this
	state without impacting any branches by switching back to a branch.

	If you want to create a new branch to retain commits you create, you may
	do so (now or later) by using -c with the switch command. Example:

  	git switch -c <new-branch-name>

	Or undo this operation with:

  	git switch -

	Turn off this advice by setting config variable advice.detachedHead to false

	HEAD is now at 236ab28 Har skapat dir guessingGame, laddat ner Nahids mall Guesser.java och 
	skapat en .gitignore start för inlämningsuppgift senast 21 Oktober 2020

Sedan skrev jag "ls" för att se att filen var där och sist "cat Guesser.java" för att kopiera till notepad.
Jag hade tidigare skrivit git log så jag visste hur jag kom tillbaka med "git checkout c1fab44" med dessa output:

	Previous HEAD position was 236ab28 Har skapat dir guessingGame, laddat ner Nahids mall Guesser.java 
	och skapat en .gitignore start för inlämningsuppgift senast 21 Oktober 2020
	HEAD is now at c1fab44 Added frågor.txt and answer G-questions

Jag hade framgångsrikt gått fram och tillbaka denna gång.
